
* Concepts
** RDF
Resource Description Framework (RDF) is a framework for data representation in the web.
*** Triples
In RDF data is stored in triples and represented as graphs. Each triple consists of a *subject*, a *predicate*, and an *object*
#+BEGIN_EXPORT html
<img src="images/g1.png">
#+END_EXPORT
*** Nodes
Nodes can be blank nodes, litrals, or URI references
#+BEGIN_SRC
<http://example.org/#Alice> <http://xmlns.com/foaf/0.1/knows> <http://example.org/#Bob> .
#+END_SRC
#+BEGIN_EXPORT html
<img src="images/g2.png">
#+END_EXPORT
*** Example
#+BEGIN_EXPORT html
<img src="images/g3.png">
#+END_EXPORT
** Representations
*** RDF/XML
#+BEGIN_SRC xml
<rdf:RDF
 xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
 xmlns:foaf="http://xmlns.com/foaf/0.1/">
    <rdf:Description rdf:about="http://example.org/#Alice">
       <foaf:knows rdf:resource="http://example.org/#Bob"/>
    </rdf:Description>
</rdf:RDF>
#+END_SRC
*** Turtle (TTL)
#+BEGIN_SRC
@prefix e: <http://example.org/#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .

e:Alice foaf:knows e:Bob .
#+END_SRC

* Objective
- Find a mechanism for converting non-structured or semi-structured data (JSON, XML, CSV, etc..) to RDF.
- Building a tool to automate the conversion using node.js.
- Build a user friendly interface.
- Investigating the RDF conversion pipeline to identify the main modules.

* Work done
** Backend
- The backend is responsible of the actual convertion of semi-structured data to RDF.
- Built with Node.js
- Can be used as a command-line tool
#+BEGIN_SRC
Usage: node rdf-gen.js [OPTION]...
-i, --in=FILE                input file
-d, --out_descriptor=FILE    out descriptor file
-r, --out_rdf=FILE           out RDF file
-b, --init_base=FILE         initial descriptor json file used as a base for the generated descriptor
-f, --format=FORMAT          out RDF format (ttl, xml)
-a, --api=API                predicates finding API (lov, swoogle, test)
-h, --help                   display this help and exit
--in_str=STR                 input as a string
--returned_value=RET         request a return for the function (DES, OUT)

Example usage:
node rdf-gen.js -i simple.json -r simple-out.ttl -d simple-des.json --api swoogle
#+END_SRC
** Frontend
A demo can help!
* Questions?
